NAME="lua-luadoc"
VERSION=3.0.1
RELEASE=2
CATEGORY="Lua"
SUMMARY="Lua documentation generator"
DESCRIPTION="\
*** LuaDoc is obsolete. Use LDoc instead. ***
LuaDoc is a documentation generator tool for Lua source code. It
parses the declarations and documentation comments in a set of Lua source files
and produces a set of XHTML pages describing the commented declarations and
functions.
"
HOMEPAGE="https://github.com/keplerproject/luadoc/"

GIT_REPO="https://github.com/keplerproject/luadoc"
declare -A GIT_DATEHASH_BY_NAME=(
  # git log --date=iso-strict --format='%cd/%H' -1
  [3.0.1]=2016-01-06T15:31:44+03:00/51577bf45502c0fb3ccabdef72fb20a549c63308
)
REV_HASH="${GIT_DATEHASH_BY_NAME[${VERSION}]#*/}"
REV_DATE="${GIT_DATEHASH_BY_NAME[${VERSION}]%%/*}"
REV_DATE_SHORT="${REV_DATE%%T*}"
GIT_BASENAME="${GIT_REPO##*/}"
SRC_URI="${GIT_REPO}/archive/${REV_HASH}/${GIT_BASENAME}-${VERSION}.tar.gz"
SRC_DIR="${GIT_BASENAME}-${REV_HASH#v}"

ARCH="noarch"

################################
LUA_VERSIONS="5.3:5.4"
LUA_PKG_NAME="luadoc"
source lua.experiment

################################
## Patch files
################################
# Patch filenames are in a default style of 'git format-patch'
PATCH_URI=$(\
  find -maxdepth 1 -type f -name '[0-9][0-9][0-9][0-9]-*.patch' \
  | sort \
)
# Additional patches, if any
PATCH_URI+="
  3.0.1-doclet-html_lua.patch
  3.0.1-misc.patch
"

################################
## Requirements for building
################################
BUILD_REQUIRES="\
  lua53-devel\
  lua53-lfs\
  lua53-logging\
\
  lua54-devel\
  lua54-lfs\
  lua54-logging\
"
# TEST_REQUIRES="\
# "

################################
ABI=0


################################
_CYGPORT_RESTRICT_postinst_doc_=1

set_packages_lua() {
  __add_pkg "lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}"
  __set_pkg_property . CONTENTS "
    usr/share/doc/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}/
    usr/*/lua/${LUA_VERSION}/
  "
  __set_pkg_property . REQUIRES "lua${LUA_VERSION_CYG}"

  __append_pkg_property . CONTENTS "
    usr/bin/*-${LUA_VERSION}
    etc/p*/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh
  "
}

set_packages_lua_versions ${LUA_VERSIONS} ${LUA_PKG_NAME}

################################
src_compile_lua() {
  mkdir -p ${B}/${LUA_VERSION}
  cd  ${B}/${LUA_VERSION}

  lndirs ${S} .

  lua_fix_shebang_version_print ${LUA_VERSION} \
    src/luadoc.lua.in > luadoc-${LUA_VERSION}
  chmod 755 luadoc-${LUA_VERSION}
}

################################
src_install_lua() {
  cd ${B}/${LUA_VERSION}

  dobin luadoc-${LUA_VERSION}

  __doinsdir src/luadoc ${LUA_LIBDIR}/luadoc

  docinto /lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}
  dodoc README* doc/

  # postinstall/preremove scripts setting alternatives
  local POSTINSTALL=./postinstall/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh
  local PREREMOVE=./preremove/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh

  mkdir -p ./postinstall
  mkdir -p ./preremove

  __script_postinstall_lua ${LUA_VERSION} ${LUA_PKG_NAME} <<_EOF > ${POSTINSTALL}
--slave /usr/bin/luadoc luadoc /usr/bin/luadoc-\${LUA_VERSION} \\
_EOF
  __script_preremove_lua ${LUA_VERSION} ${LUA_PKG_NAME} > ${PREREMOVE}

  insinto /etc/postinstall
  doins ${POSTINSTALL}
  insinto /etc/preremove
  doins ${PREREMOVE}
}

################################
src_test_lua() {
  cd ${B}/${LUA_VERSION}

  local cmd

  local TEST_LUA_PATH=$(lua_path_test ${LUA_VERSION} ./src)
  local TEST_LUA_CPATH=$(lua_cpath_test ${LUA_VERSION})

  cmd="./luadoc-${LUA_VERSION} -d testdocs test/*.lua"
  printf '%s\n' "${cmd}"
  LUA_PATH="${TEST_LUA_PATH}" \
  LUA_CPATH="${TEST_LUA_CPATH}" \
  sh -c "${cmd}"
}

################################
